name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on tag push, adjust as needed

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cc:
          - gcc
          - o64-clang
          - x86_64-w64-mingw32-gcc
        cxx:
          - g++
          - o64-clang++
          - x86_64-w64-mingw32-g++
        goos:
          - linux
          - windows
          - darwin
        goarch:
          - amd64
        include:
          - goos: linux
            goarch: amd64
            cc: gcc
            cxx: g++
          - goos: darwin
            goarch: amd64
            cc: o64-clang
            cxx: o64-clang++
          - goos: windows
            goarch: amd64
            cc: x86_64-w64-mingw32-gcc
            cxx: x86_64-w64-mingw32-g++

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Install GCC and libraries
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc libc6-dev
          sudo apt-get install -y libx11-dev xorg-dev libxtst-dev
          sudo apt-get install -y xsel xclip
          sudo apt-get install -y libpng++-dev
          sudo apt-get install -y xcb libxcb-xkb-dev x11-xkb-utils libx11-xcb-dev libxkbcommon-x11-dev libxkbcommon-dev


      - name: Build server binary
        run: |
          CC=${{ matrix.cc }} CXX=${{ matrix.cxx }} CGO_ENABLED=1 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o remotecopy-server-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/server/main.go

      - name: Build client binary
        run: |
          CC=${{ matrix.cc }} CXX=${{ matrix.cxx }} CGO_ENABLED=1 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o remotecopy-client-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/client/main.go

      - name: Upload Release Assets
        uses: actions/upload-artifact@v3
        with:
          name: remotecopy-binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            remotecopy-server-${{ matrix.goos }}-${{ matrix.goarch }}
            remotecopy-client-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: remotecopy-server-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_name: remotecopy-server-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_content_type: application/octet-stream

      - name: Upload Client Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: remotecopy-client-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_name: remotecopy-client-${{ matrix.goos }}-${{ matrix.goarch }}
          asset_content_type: application/octet-stream